@tailwind base;
@tailwind components;
@tailwind utilities;


body {
  background-color: #0D1117;
}


html * {
  font-family: 'Poppins', sans-serif;
  font-display: swap;
  line-height: 1.5;

}

.spline-watermark {
  display: none!important;
  opacity: 0!important;
  transform: scale(0);

}


svg {
  pointer-events: none;
  border: none;
}

.flame-container {
  position: fixed;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
}

.flame {
  position: absolute;
  width: 10px;
  height: 10px;
  background-color: #ff4500; /* Adjust the color as needed */
  border-radius: 50%;
  transform-origin: 50% 100%;
  animation: flameAnimation 0.3s linear infinite alternate;
}

@keyframes flameAnimation {
  0% {
    transform: scaleY(1) scaleX(1);
  }
  100% {
    transform: scaleY(1.5) scaleX(1.2);
  }
}

.page-enter {
  opacity: 0;
  transform: translateX(100%);
}

.page-enter-active {
  opacity: 1;
  transform: translateX(0);
  transition: opacity 300ms, transform 300ms;
}

.page-exit {
  opacity: 1;
  transform: translateX(0);
}

.page-exit-active {
  opacity: 0;
  transform: translateX(-100%);
  transition: opacity 300ms, transform 300ms;
}

input {
  outline: none;
  transform:
  rotateX(51deg)
  rotateZ(43deg);
transform-style: preserve-3d;
border-radius: 32px;
box-shadow: #00df9a 0px 0px 10px;
}

table {
transform-style: preserve-3d;
border-radius: 32px;
box-shadow: #00df9a 0px 0px 10px;
transition: all .5s;
}

button {
  outline: none;
  border-radius: 3%;
  box-shadow: #00df9a 0px 0px 1px;

}

select {
  outline: none;
  box-shadow: #00df9a 0px 0px 10px;

}

input:focus {
  outline: none;
}

input::placeholder {
  color: white;
}

.diagram-container {
  width: 400px;
  height: 400px;
  background: #0D1117;
  border-radius: 10%; 
  border-color: #00df9a;
  border-width: 1px;
  box-shadow: #00df9a 0px 0px 10px;
}


.fade-in {
  animation: fadeIn ease 0.5s; /* Adjust animation duration as needed */
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.slide-in {
  animation: slideIn 0.5s ease forwards;
}

.slide-out {
  animation: slideOut 0.5s ease forwards;
}

@keyframes slideOut {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(-300px); /* Adjust as needed */
  }
}

@keyframes slideIn {
  from {
    transform: translateX(-100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

/* card hero animation  */
.thumbnail-container {
  border-radius: 10px;
  padding: 10px;
  cursor: pointer;

  transition: transform 0.2s ease-in-out;
  opacity: 0.8; /* Decreased opacity */
  animation: rotateThumbnail 10s linear infinite; /* Loop in rotation */
}

@keyframes rotateThumbnail {
  5% {
    transform: rotate(0deg);
  }
  10% {
    transform: rotate(30deg);
  }
  15% {
    transform: rotate(-30deg);
  }
}

.thumbnail-container:hover {
  transform: scale(1.1);
}

.active-indicator {
  width: 10px;
  height: 10px;
  background-color: #12a174;
  border-radius: 50%;
  position: absolute;
  bottom: 5px;
  right: 5px;
}

/* .card {
  transform:
    perspective(750px)
    translate3d(0px, 0px, -250px)
    rotateX(27deg)
    scale(0.9, 0.9);
}

.card:hover {
  transform:
  rotate3d(.5,-.866,0,0deg)
  rotate(0deg);
} */

/* scale and fade in */

.scale-fade-in {
  opacity: 0;
  transform: scale(0.8);
  animation: scaleFadeInAnimation 0.5s ease-out forwards;
}

@keyframes scaleFadeInAnimation {
  0% {
      opacity: 0;
      transform: scale(0.8);
  }
  100% {
      opacity: 1;
      transform: scale(1);
  }
}

/*  tag */
.tag {
  /* 3D effect */
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
}

/* tooltip */

.tooltip-container {
  position: relative;
  display: inline-block; /* Ensures tooltip container doesn't expand */
}

.tooltip-content {
  visibility: hidden;
  width: cover;
  background-color: #000300;
  color: #00df9a;
  text-align: center;
  padding: 5px;
  border-radius: 6px;
  position: absolute;
  z-index: 1;
  bottom: 125%; /* Position it above the trigger */
  left: 50%;
  transform: translateX(-50%); /* Center horizontally */
  opacity: 0.75;
  transition: opacity 0.1s;
}

.tooltip-container:hover .tooltip-content {
  visibility: visible;
  opacity: 1;
}

/* Styling for the arrow */
.tooltip-content::after {
  content: "";
  position: absolute;
  top: 100%;
  left: 50%;
  margin-left: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: #333 transparent transparent transparent;
}


/* toggle */

.toggle {
  display: flex;
  justify-content: center;
  position: relative;
}

.toggle-input {
  position: absolute;
  z-index: 2;
  bottom: 132.5%;
  border-radius: 50%;
  transform: rotate(-25deg);
  transform-origin: 50% 4.75em;
  width: 1.75em;
  height: 1.75em;
  opacity: 0;
  transition: transform 0.24s cubic-bezier(0.65, 1.35, 0.5, 1);
  cursor: pointer;
}
.toggle-input:checked {
  transform: rotate(25deg);
}

.toggle-handle-wrapper {
  position: absolute;
  z-index: 1;
  bottom: -135%;
  -webkit-mask-image: linear-gradient(to bottom, #000 62.125%, transparent 50%);
  mask-image: linear-gradient(to bottom, #000 62.125%, transparent 50%);
  width: 200%;
  overflow: hidden;
}

.toggle-handle {
  display: flex;
  flex-direction: column;
  align-items: center;
  transform: rotate(-25deg);
  transform-origin: bottom center;
  transition: transform 0.24s cubic-bezier(0.65, 1.35, 0.5, 1);
}
.toggle-input:checked + .toggle-handle-wrapper > .toggle-handle {
  transform: rotate(25deg);
}

.toggle-handle-knob {
  position: relative;
  z-index: 1;
  border-radius: 50%;
  width: 1.75em;
  height: 1.75em;
  background-image: radial-gradient(farthest-corner at 70% 30%, #00df9a 4%, #0f9e71 12% 24%, #00df9a 50% 65%, #00df9a 75%);
  transition: transform 0.24s cubic-bezier(0.65, 1.35, 0.5, 1);
}
.toggle-input:checked + .toggle-handle-wrapper .toggle-handle-knob {
  transform: rotate(-90deg);
}
.toggle-handle-knob::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  border-radius: inherit;
  width: 100%;
  height: 100%;
  box-shadow: inset 0 0 8px 2px #00df9a;
  opacity: 0;
  transition: opacity 0.2s;
}
@media (hover: hover) {
  .toggle-input:hover + .toggle-handle-wrapper .toggle-handle-knob::after, .toggle-input:focus-visible + .toggle-handle-wrapper .toggle-handle-knob::after {
    opacity: 1;
  }
}

.toggle-handle-bar-wrapper {
  position: relative;
  width: 0.5em;
  height: 3em;
}

.toggle-handle-bar {
  position: absolute;
  top: -0.875em;
  left: 0;
  width: 100%;
  height: calc(100% + 0.875em);
  background-image: linear-gradient(to right, #00df9a, #00df9a, #00df9a 45% 55%, #00df9a, #00df9a);
  background-position-x: 0.06125em;
  transition: background-position-x 0.24s cubic-bezier(0.65, 1.35, 0.5, 1);
  box-shadow: #00df9a 0px 0px 10px;
}
.toggle-input:checked + .toggle-handle-wrapper .toggle-handle-bar {
  background-position-x: -0.06125em;
}

.toggle-base {
  position: relative;
  border-radius: 3.125em;
  padding: 0.25em;
  width: 3.5em;
  height: 1.125em;
  background-color: #000300;
  background-image: linear-gradient(to bottom, #00df9a, #000300);
  box-shadow: #00df9a 0px 0px 10px;
}

.toggle-base-inside {
  position: relative;
  border-radius: inherit;
  width: 100%;
  height: 100%;
  background-image: linear-gradient(to bottom, #00df9a, #000300);
  box-shadow: inset 0 0.0625em rgba(255, 255, 255, 0.2), inset 0 -0.03125em rgb(255, 255, 255), inset 0 -0.0625em 0.25em rgba(0, 0, 0, 0.1);
}
.toggle-base-inside::after {
  content: "";
  position: absolute;
  border-radius: inherit;
  width: 100%;
  height: 100%;
  background-image: linear-gradient(to bottom, #5ab054, #438c3c);
  box-shadow: inherit;
  opacity: 0;
  transition: opacity 0.24s cubic-bezier(0.65, 1.35, 0.5, 1);
}
.toggle-input:checked ~ .toggle-base .toggle-base-inside::after {
  opacity: 1;
}

.toggleContainer {
  border-color: #00df9a;
  border-width: 2px;
  width: 200px;
  margin: 5px;
  border-radius: 32px;
  box-shadow: #00df9a 0px 0px 10px;
  transform:
  rotateX(51deg)
  rotateZ(43deg);
  transform-style: preserve-3d;
}

/* json response */

.json-response {
  border-radius: 32px;
  box-shadow: #00df9a 0px 0px 10px;
  transform-style: preserve-3d;
}

.pricingCardHeader {
  color: white;
  writing-mode: vertical-rl;
  text-orientation: upright;
}


/* pricing card flip */

.card-wrapper {
  position: relative;
  transition: transform 0.5s;
  perspective: 1000px; /* Specify the perspective */
}

.card-wrapper.hover {
  transform: rotateY(180deg); /* Apply rotation on hover */
}

.card-wrapper:hover .card-back {
  transform: rotateY(0deg); /* Show back side of the card on hover */
}

.card-back {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  backface-visibility: hidden; /* Hide back side by default */
  transform: rotateY(180deg); /* Rotate initially to hide */
}

/* Apply rotation to the text inside the card */
.card-content {
  transform: rotateY(180deg);
}


footer {
  background-color: #efefef;
  flex: 0 0 50px;/*or just height:50px;*/
  margin-top: auto;
}